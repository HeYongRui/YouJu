apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion versions.compileSdk

    defaultConfig {
        minSdkVersion versions.minSdk
        targetSdkVersion versions.compileSdk
        versionCode versions.publishVersionCode
        versionName versions.publishVersion

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        kapt {
            arguments {
                arg("AROUTER_MODULE_NAME", project.getName())
            }
        }
//        javaCompileOptions {
//            annotationProcessorOptions {
//                arguments = [AROUTER_MODULE_NAME: project.getName()]
//            }
//        }
    }

    signingConfigs {
        release {
            storeFile file("../keystore.jks")
            storePassword "111111"
            keyAlias "youju"
            keyPassword "111111"
        }

        debug {
            storeFile file("../keystore.jks")
            storePassword "111111"
            keyAlias "youju"
            keyPassword "111111"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }

}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])
    //官方组件
    api "com.android.support:design:${versions.supportVersion}"
    api "androidx.appcompat:appcompat:${versions.androidx}"
    api "androidx.constraintlayout:constraintlayout:${versions.constraintLayout}"
    //kotlin支持
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${versions.kotlinVersion}"
    api "androidx.core:core-ktx:${versions.coreKtx}"
    //管理Fragment和Activity
    api "me.yokeyword:fragmentationx:${versions.fragmentationx}"
    //Arouter路由
    api "com.alibaba:arouter-annotation:${versions.arouterAnnotation}"
    api "com.alibaba:arouter-api:${versions.arouterApi}"
    kapt "com.alibaba:arouter-compiler:${versions.arouterCompiler}"
    //dagger
    api "com.google.dagger:dagger:${versions.dagger}"
    kapt "com.google.dagger:dagger-compiler:${versions.dagger}"
    //解决dex超出方法数限制的问题
    api "com.android.support:multidex:${versions.multidex}"
    //工具类
    api "com.blankj:utilcodex:${versions.utilcode}"
    //线程调度
    api "io.reactivex.rxjava2:rxjava:${versions.rxjava}"
    api "io.reactivex.rxjava2:rxandroid:${versions.rxandroid}"
    //网络请求相关
    api "com.squareup.retrofit2:retrofit:${versions.retrofit}"
    api "com.squareup.retrofit2:adapter-rxjava2:${versions.retrofit}"
    api "com.squareup.retrofit2:converter-gson:${versions.retrofit}"
    api "com.squareup.okhttp3:okhttp:${versions.okhttp}"
    api "com.squareup.okhttp3:logging-interceptor:${versions.okhttp}"
    //Glide图片加载
    api "com.github.bumptech.glide:glide:${versions.glide}"
    kapt "com.github.bumptech.glide:compiler:${versions.glide}"
    kapt "androidx.annotation:annotation:${versions.androidxAnnotation}"
    //状态栏管理
    api "com.gyf.immersionbar:immersionbar:${versions.immersionbar}"
    api "com.gyf.immersionbar:immersionbar-components:${versions.immersionbar}"
    //Recyclerview适配器
    api "com.github.CymChad:BaseRecyclerViewAdapterHelper:${versions.baseRlvAdapter}"
    //刷新框架
    api "com.scwang.smartrefresh:SmartRefreshLayout:${versions.smartRefreshLayout}"
    api "com.scwang.smartrefresh:SmartRefreshHeader:${versions.smartRefreshLayout}"

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
