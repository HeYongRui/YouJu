if (rootProject.ext.isRunAloneIflytek) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion versions.compileSdk

    defaultConfig {
        if (rootProject.ext.isRunAloneIflytek) {
            applicationId "com.heyongrui.iflytek"
            multiDexEnabled true
        }
        minSdkVersion versions.minSdk
        targetSdkVersion versions.compileSdk
        versionCode versions.publishVersionCode
        versionName versions.publishVersion

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        kapt {
            arguments {
                arg("AROUTER_MODULE_NAME", project.getName())
            }
        }
//        javaCompileOptions {
//            annotationProcessorOptions {
//                arguments = [AROUTER_MODULE_NAME: project.getName()]
//            }
//        }
    }

    signingConfigs {
        release {
            storeFile file("../keystore.jks")
            storePassword "111111"
            keyAlias "youju"
            keyPassword "111111"
        }

        debug {
            storeFile file("../keystore.jks")
            storePassword "111111"
            keyAlias "youju"
            keyPassword "111111"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }

    sourceSets {
        main {
            if (rootProject.ext.isRunAloneIflytek) {
                manifest.srcFile 'src/main/debug/AndroidManifest.xml'
                java.srcDirs = ['src/main/debug/java/', 'src/main/java/']
                res.srcDirs = ['src/main/debug/res', 'src/main/res']
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
                java.srcDirs = ['src/main/java/']
                res.srcDirs = ['src/main/res']
                java {
                    exclude 'src/main/debug/**'
                }
            }

        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':base')
    implementation project(':network')
    //Arouter路由
    kapt "com.alibaba:arouter-compiler:${versions.arouterCompiler}"
    //dagger
    kapt "com.google.dagger:dagger-compiler:${versions.dagger}"

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
